openapi: 3.0.3
info:
  title: Rental Backend API
  version: 1.0.0
  description: API сервиса аренды жилья с бронированиями, отзывами и авторизацией
    JWT.
paths:
  /api/v1/auth/login/:
    post:
      operationId: api_v1_auth_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/auth/refresh/:
    post:
      operationId: api_v1_auth_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/register/me/:
    get:
      operationId: api_v1_auth_register_me_retrieve
      description: Возвращает профиль текущего авторизованного пользователя.
      tags:
      - Users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/register/register/:
    post:
      operationId: api_v1_auth_register_register_create
      description: Регистрация нового пользователя (TENANT или LANDLORD). Возвращает
        данные пользователя после успешного создания.
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegister'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegister'
          description: ''
  /api/v1/bookings/:
    get:
      operationId: api_v1_bookings_list
      description: Управление бронированиями жилья.
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBookingList'
          description: ''
    post:
      operationId: api_v1_bookings_create
      description: Управление бронированиями жилья.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Booking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Booking'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
  /api/v1/bookings/{id}/:
    get:
      operationId: api_v1_bookings_retrieve
      description: Управление бронированиями жилья.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this booking.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
    put:
      operationId: api_v1_bookings_update
      description: Управление бронированиями жилья.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this booking.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Booking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Booking'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
    patch:
      operationId: api_v1_bookings_partial_update
      description: Управление бронированиями жилья.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this booking.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBooking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBooking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBooking'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
    delete:
      operationId: api_v1_bookings_destroy
      description: Управление бронированиями жилья.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this booking.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/bookings/{id}/approve/:
    post:
      operationId: api_v1_bookings_approve_create
      description: Арендодатель подтверждает бронирование.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this booking.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Booking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Booking'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
  /api/v1/bookings/{id}/cancel/:
    post:
      operationId: api_v1_bookings_cancel_create
      description: Отменить бронирование (автор или владелец).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this booking.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Booking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Booking'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
  /api/v1/bookings/{id}/reject/:
    post:
      operationId: api_v1_bookings_reject_create
      description: Арендодатель отклоняет бронирование.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this booking.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Booking'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Booking'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Booking'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
          description: ''
  /api/v1/listings/:
    get:
      operationId: api_v1_listings_list
      description: Записываем поисковый запрос пользователя
      parameters:
      - in: query
        name: is_available
        schema:
          type: boolean
      - in: query
        name: location
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: price_max
        schema:
          type: number
      - in: query
        name: price_min
        schema:
          type: number
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedListingList'
          description: ''
    post:
      operationId: api_v1_listings_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Listing'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Listing'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Listing'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
          description: ''
  /api/v1/listings/{listing_pk}/reviews/:
    get:
      operationId: api_v1_listings_reviews_list
      parameters:
      - in: path
        name: listing_pk
        schema:
          type: integer
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - Reviews
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReviewList'
          description: ''
    post:
      operationId: api_v1_listings_reviews_create
      parameters:
      - in: path
        name: listing_pk
        schema:
          type: integer
        required: true
      tags:
      - Reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
  /api/v1/listings/{listing_pk}/reviews/{id}/:
    get:
      operationId: api_v1_listings_reviews_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review.
        required: true
      - in: path
        name: listing_pk
        schema:
          type: integer
        required: true
      tags:
      - Reviews
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    put:
      operationId: api_v1_listings_reviews_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review.
        required: true
      - in: path
        name: listing_pk
        schema:
          type: integer
        required: true
      tags:
      - Reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Review'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    patch:
      operationId: api_v1_listings_reviews_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review.
        required: true
      - in: path
        name: listing_pk
        schema:
          type: integer
        required: true
      tags:
      - Reviews
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReview'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
          description: ''
    delete:
      operationId: api_v1_listings_reviews_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this review.
        required: true
      - in: path
        name: listing_pk
        schema:
          type: integer
        required: true
      tags:
      - Reviews
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/listings/{id}/:
    get:
      operationId: api_v1_listings_retrieve
      description: При просмотре увеличиваем счётчик просмотров
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this listing.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
          description: ''
    put:
      operationId: api_v1_listings_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this listing.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Listing'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Listing'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Listing'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
          description: ''
    patch:
      operationId: api_v1_listings_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this listing.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedListing'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedListing'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedListing'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
          description: ''
    delete:
      operationId: api_v1_listings_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this listing.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/listings/search-trends/:
    get:
      operationId: api_v1_listings_search_trends_retrieve
      description: Возвращает 20 самых популярных поисковых запросов
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Listing'
          description: ''
  /api/v1/stats/add_query/:
    post:
      operationId: api_v1_stats_add_query_create
      description: |-
        API для аналитики:
        - top_listings: популярные объявления
        - top_queries: частые поиски
        - add_view: запись просмотра объявления
        - add_query: запись поискового запроса
        - summary: общая статистика + за последние 7 дней
      tags:
      - Stats
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/stats/add_view/:
    post:
      operationId: api_v1_stats_add_view_create
      description: |-
        API для аналитики:
        - top_listings: популярные объявления
        - top_queries: частые поиски
        - add_view: запись просмотра объявления
        - add_query: запись поискового запроса
        - summary: общая статистика + за последние 7 дней
      tags:
      - Stats
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/stats/summary/:
    get:
      operationId: api_v1_stats_summary_retrieve
      description: |-
        Возвращает сводную статистику:
        - total_views — общее количество просмотров объявлений
        - unique_users — количество уникальных пользователей, совершавших просмотры
        - total_queries — количество поисковых запросов
        - top_listings (топ-3) — самые популярные объявления по количеству просмотров
        - activity_last_7_days — активность за последние 7 дней:
            - views: количество просмотров по датам
            - queries: количество поисковых запросов по датам
      tags:
      - Stats
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/stats/top_listings/:
    get:
      operationId: api_v1_stats_top_listings_retrieve
      description: |-
        API для аналитики:
        - top_listings: популярные объявления
        - top_queries: частые поиски
        - add_view: запись просмотра объявления
        - add_query: запись поискового запроса
        - summary: общая статистика + за последние 7 дней
      tags:
      - Stats
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/stats/top_queries/:
    get:
      operationId: api_v1_stats_top_queries_retrieve
      description: |-
        API для аналитики:
        - top_listings: популярные объявления
        - top_queries: частые поиски
        - add_view: запись просмотра объявления
        - add_query: запись поискового запроса
        - summary: общая статистика + за последние 7 дней
      tags:
      - Stats
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/users/me/:
    get:
      operationId: api_v1_users_me_retrieve
      description: Возвращает профиль текущего авторизованного пользователя.
      tags:
      - Users
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/users/register/:
    post:
      operationId: api_v1_users_register_create
      description: Регистрация нового пользователя (TENANT или LANDLORD). Возвращает
        данные пользователя после успешного создания.
      tags:
      - Auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegister'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegister'
          description: ''
components:
  schemas:
    Booking:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        listing:
          type: integer
        user:
          type: integer
          readOnly: true
      required:
      - created_at
      - end_date
      - id
      - listing
      - start_date
      - status
      - user
    Listing:
      type: object
      description: |-
        Сериализатор для объявлений.
        Добавлены:
        - converted_price (конвертация валюты)
        - local_created_at (локальное время по ?tz=)
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        price_currency:
          $ref: '#/components/schemas/PriceCurrencyEnum'
        converted_price:
          type: string
          readOnly: true
        is_available:
          type: boolean
        country:
          type: string
          maxLength: 100
        city:
          type: string
          maxLength: 100
        street:
          type: string
          maxLength: 255
        house_number:
          type: string
          maxLength: 10
        apartment_number:
          type: string
          nullable: true
          maxLength: 10
        view_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        local_created_at:
          type: string
          readOnly: true
      required:
      - city
      - converted_price
      - country
      - created_at
      - description
      - house_number
      - id
      - local_created_at
      - owner
      - price
      - street
      - title
      - view_count
    PaginatedBookingList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Booking'
    PaginatedListingList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Listing'
    PaginatedReviewList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Review'
    PatchedBooking:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        listing:
          type: integer
        user:
          type: integer
          readOnly: true
    PatchedListing:
      type: object
      description: |-
        Сериализатор для объявлений.
        Добавлены:
        - converted_price (конвертация валюты)
        - local_created_at (локальное время по ?tz=)
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        price_currency:
          $ref: '#/components/schemas/PriceCurrencyEnum'
        converted_price:
          type: string
          readOnly: true
        is_available:
          type: boolean
        country:
          type: string
          maxLength: 100
        city:
          type: string
          maxLength: 100
        street:
          type: string
          maxLength: 255
        house_number:
          type: string
          maxLength: 10
        apartment_number:
          type: string
          nullable: true
          maxLength: 10
        view_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        local_created_at:
          type: string
          readOnly: true
    PatchedReview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        rating:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        comment:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          readOnly: true
        listing:
          type: integer
          readOnly: true
    PriceCurrencyEnum:
      enum:
      - EUR
      - USD
      - GBP
      - CHF
      - PLN
      - CZK
      type: string
      description: |-
        * `EUR` - Euro
        * `USD` - US Dollar
        * `GBP` - Pound Sterling
        * `CHF` - Swiss Franc
        * `PLN` - Polish Zloty
        * `CZK` - Czech Koruna
    Review:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        rating:
          type: integer
          maximum: 4294967295
          minimum: 0
          format: int64
        comment:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          readOnly: true
        listing:
          type: integer
          readOnly: true
      required:
      - comment
      - created_at
      - id
      - listing
      - user
    RoleEnum:
      enum:
      - TENANT
      - LANDLORD
      type: string
      description: |-
        * `TENANT` - Tenant
        * `LANDLORD` - Landlord
    StatusEnum:
      enum:
      - pending
      - approved
      - rejected
      - canceled
      type: string
      description: |-
        * `pending` - Pending
        * `approved` - Approved
        * `rejected` - Rejected
        * `canceled` - Canceled
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    UserRegister:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        role:
          $ref: '#/components/schemas/RoleEnum'
      required:
      - password
      - password2
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
- name: Auth
  description: Авторизация и регистрация пользователей
- name: Users
  description: Профили пользователей
- name: Listings
  description: Объявления о сдаче жилья
- name: Bookings
  description: Бронирования и статусы заявок
- name: Reviews
  description: Отзывы о жилье
- name: Stats
  description: Статистика просмотров и поисков
