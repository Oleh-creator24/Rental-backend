"""
Django settings for config project.
Generated by 'django-admin startproject' using Django 5.2.x
"""

import os
import sys
from pathlib import Path
from config.logging_setup import logger
from datetime import timedelta



# ----------------------------------------------------------------------------- #
# BASE DIR
# ----------------------------------------------------------------------------- #
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# ----------------------------------------------------------------------------- #
# SECURITY / DEBUG
# ----------------------------------------------------------------------------- #
SECRET_KEY = os.getenv(
    "SECRET_KEY",
    "django-insecure-xq=t%edyvu=z_2=q0q0yvds@a^qnpz!4*qe40g)az7jqni_dt8"
)

DEBUG = os.getenv("DEBUG", "1") == "1"

ALLOWED_HOSTS = [
    h.strip()
    for h in os.getenv("ALLOWED_HOSTS", "localhost,127.0.0.1").split(",")
    if h.strip()
]

# ----------------------------------------------------------------------------- #
# APPLICATIONS
# ----------------------------------------------------------------------------- #
INSTALLED_APPS = [

    # Django core
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # Utils
    "django_extensions",
    "django_filters",

    # Third-party
    "rest_framework",
    "rest_framework_simplejwt",
    "rest_framework.authtoken",
    "drf_spectacular",
    "drf_spectacular_sidecar",

    # Local apps
    "users",
    "listings",
    "bookings",
    "reviews",
    "stats",
    "locations",
]



# ----------------------------------------------------------------------------- #
# JAZZMIN SETTINGS
# ----------------------------------------------------------------------------- #
JAZZMIN_SETTINGS = {
    "site_title": "Rental Management",
    "site_header": "Rental Management",
    "welcome_sign": "Добро пожаловать в систему аренды",
    "site_logo": "img/logo.png",  # логотип в админке
    "site_logo_classes": "img-fluid",
    "login_logo": "img/logo.png",  # логотип на странице входа
    "login_logo_dark": None,
    "site_brand": "",
    "show_ui_builder": False,
    "copyright": "© 2025 HedgeWood",

    # Главное меню
    "topmenu_links": [
        {"name": "Главная", "url": "/", "new_window": True},
        {"app": "users"},
        {"app": "listings"},
        {"app": "bookings"},
        {"app": "reviews"},
        {"app": "stats"},
    ],

    # Левая панель
    "sidebar": True,
    "navigation_expanded": True,

    # Порядок отображения приложений
    "order_with_respect_to": [
        "users",
        "listings",
        "bookings",
        "reviews",
        "stats",
    ],

    # Кастомные ссылки
    "custom_links": {
        "listings": [
            {"name": "Добавить объявление", "url": "admin:listings_listing_add", "icon": "fas fa-plus"},
        ],
        "bookings": [
            {"name": "Активные бронирования", "url": "admin:bookings_booking_changelist", "icon": "fas fa-calendar-check"},
        ],
        "reviews": [
            {"name": "Отзывы арендаторов", "url": "admin:reviews_review_changelist", "icon": "fas fa-comment"},
        ],
        "stats": [
            {"name": "Просмотры и поиски", "url": "admin:stats_listingview_changelist", "icon": "fas fa-chart-line"},
        ],
    },

    # Иконки
    "icons": {
        "auth": "fas fa-users-cog",
        "users.User": "fas fa-user",
        "listings.Listing": "fas fa-home",
        "bookings.Booking": "fas fa-calendar-alt",
        "reviews.Review": "fas fa-star",
        "stats.ListingView": "fas fa-chart-line",
        "stats.SearchQuery": "fas fa-search",
    },

    # Цветовая тема
    "theme": "flatly",
    "dark_mode_theme": "cyborg",
}



# ----------------------------------------------------------------------------- #
# JAZZMIN CUSTOM UI
# ----------------------------------------------------------------------------- #
JAZZMIN_UI_TWEAKS = {
    "custom_css": "css/jazzmin_custom.css",
    "custom_js": None,
}

# ----------------------------------------------------------------------------- #
# MIDDLEWARE / URLCONF / WSGI
# ----------------------------------------------------------------------------- #
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR /"src"/"templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"

# ----------------------------------------------------------------------------- #
# DATABASE
# ----------------------------------------------------------------------------- #
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": "rental",
        "USER": "rental",
        "PASSWORD": "rental",
        "HOST": "127.0.0.1",  # подключаемся к контейнеру через проброшенный порт
        "PORT": "3306",
        "OPTIONS": {
            "charset": "utf8mb4",
            "init_command": "SET NAMES 'utf8mb4' COLLATE 'utf8mb4_unicode_ci'"
        },
    }
}


if "test" in sys.argv or "pytest" in sys.argv:
    print("⚙️ Using main 'rental' DB for tests (no CREATE DATABASE).")
    DATABASES["default"]["NAME"] = "rental"

# ----------------------------------------------------------------------------- #
# PASSWORD VALIDATION
# ----------------------------------------------------------------------------- #
AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# ----------------------------------------------------------------------------- #
# INTERNATIONALIZATION
# ----------------------------------------------------------------------------- #
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# ----------------------------------------------------------------------------- #
# STATIC FILES
# ----------------------------------------------------------------------------- #
STATIC_URL = "/static/"

STATICFILES_DIRS = [
    BASE_DIR / "src" / "static",
]

STATIC_ROOT = BASE_DIR / "staticfiles"

# ----------------------------------------------------------------------------- #
# DEFAULTS
# ----------------------------------------------------------------------------- #
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
AUTH_USER_MODEL = "users.User"

# ----------------------------------------------------------------------------- #
# REST FRAMEWORK / JWT / DOCS
# ----------------------------------------------------------------------------- #
REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_FILTER_BACKENDS": (
        "django_filters.rest_framework.DjangoFilterBackend",
        "rest_framework.filters.SearchFilter",
        "rest_framework.filters.OrderingFilter",
    ),
    "DEFAULT_PAGINATION_CLASS": "config.pagination.DefaultPagination",
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=1),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": True,
}

SPECTACULAR_SETTINGS = {
    "TITLE": "Rental Backend API",
    "DESCRIPTION": "API сервиса аренды жилья с бронированиями, отзывами и авторизацией JWT.",
    "VERSION": "1.0.0",
    "SERVE_INCLUDE_SCHEMA": False,
    "TAGS": [
        {"name": "Auth", "description": "Авторизация и регистрация пользователей"},
        {"name": "Users", "description": "Профили пользователей"},
        {"name": "Listings", "description": "Объявления о сдаче жилья"},
        {"name": "Bookings", "description": "Бронирования и статусы заявок"},
        {"name": "Reviews", "description": "Отзывы о жилье"},
        {"name": "Stats", "description": "Статистика просмотров и поисков"},
    ],
}
# === EMAIL CONFIGURATION ===
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "Kalimbetoleh@gmail.com"
EMAIL_HOST_PASSWORD = "pcik ndqw fkno kjjt"
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
