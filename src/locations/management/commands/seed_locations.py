from django.core.management.base import BaseCommand
from faker import Faker
import random

from locations.models import Region, Country, State, City
from listings.models import Listing
from users.models import User

fake = Faker()


class Command(BaseCommand):
    help = "–°–æ–∑–¥–∞—ë—Ç —Ä–µ–≥–∏–æ–Ω—ã, —Å—Ç—Ä–∞–Ω—ã, —à—Ç–∞—Ç—ã, –≥–æ—Ä–æ–¥–∞ –∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å Faker"

    def handle(self, *args, **kwargs):
        self.stdout.write("üåç –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö...")

        # –û—á–∏—Å—Ç–∏–º —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞—Ü–∏–∏ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
        Listing.objects.all().delete()
        City.objects.all().delete()
        State.objects.all().delete()
        Country.objects.all().delete()
        Region.objects.all().delete()

        regions_data = {
            "–ï–≤—Ä–æ–ø–∞": {
                "–ì–µ—Ä–º–∞–Ω–∏—è": ["–ë–∞–≤–∞—Ä–∏—è", "–°–∞–∫—Å–æ–Ω–∏—è", "–ë—Ä–∞–Ω–¥–µ–Ω–±—É—Ä–≥"],
                "–§—Ä–∞–Ω—Ü–∏—è": ["–ò–ª—å-–¥–µ-–§—Ä–∞–Ω—Å", "–ü—Ä–æ–≤–∞–Ω—Å", "–ù–æ—Ä–º–∞–Ω–¥–∏—è"],
                "–ü–æ–ª—å—à–∞": ["–ú–∞–∑–æ–≤–µ—Ü–∫–æ–µ", "–ú–∞–ª–æ–ø–æ–ª—å—Å–∫–æ–µ", "–ü–æ–º–æ—Ä—Å–∫–æ–µ"]
            },
            "–°–®–ê": {
                "–°–®–ê": ["–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è", "–¢–µ—Ö–∞—Å", "–ù—å—é-–ô–æ—Ä–∫", "–§–ª–æ—Ä–∏–¥–∞"]
            },
            "–ê–∑–∏—è": {
                "–Ø–ø–æ–Ω–∏—è": ["–¢–æ–∫–∏–æ", "–û—Å–∞–∫–∞", "–•–æ–∫–∫–∞–π–¥–æ"],
                "–ö–∏—Ç–∞–π": ["–ì—É–∞–Ω–¥—É–Ω", "–ü–µ–∫–∏–Ω", "–®–∞–Ω—Ö–∞–π"]
            }
        }

        landlords = list(User.objects.filter(is_staff=False))
        if not landlords:
            self.stdout.write(self.style.WARNING("‚ö†Ô∏è –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π! –°–æ–∑–¥–∞–π —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."))
            return

        for region_name, countries in regions_data.items():
            region = Region.objects.create(name=region_name)
            self.stdout.write(f"üó∫Ô∏è –†–µ–≥–∏–æ–Ω: {region_name}")

            for country_name, states in countries.items():
                country = Country.objects.create(name=country_name, region=region)
                self.stdout.write(f"  üåé –°—Ç—Ä–∞–Ω–∞: {country_name}")

                for state_name in states:
                    state = State.objects.create(name=state_name, country=country)
                    self.stdout.write(f"    üèôÔ∏è –®—Ç–∞—Ç/–û–±–ª–∞—Å—Ç—å: {state_name}")

                    # –°–æ–∑–¥–∞—ë–º –≥–æ—Ä–æ–¥–∞
                    for _ in range(random.randint(2, 4)):
                        city_name = fake.city()
                        city = City.objects.create(name=city_name, state=state)
                        self.stdout.write(f"      üè° –ì–æ—Ä–æ–¥: {city_name}")

                        # –°–æ–∑–¥–∞—ë–º 20 –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≥–æ—Ä–æ–¥–∞
                        for _ in range(20):
                            owner = random.choice(landlords)
                            Listing.objects.create(
                                owner=owner,
                                title=fake.sentence(nb_words=4),
                                description=fake.paragraph(nb_sentences=3),
                                price=round(random.uniform(50, 1000), 2),
                                price_currency=random.choice(["EUR", "USD", "GBP", "PLN"]),
                                is_available=random.choice([True, True, True, False]),
                                country=country.name,
                                city=city,
                                street=fake.street_name(),
                                house_number=str(random.randint(1, 150)),
                            )

        self.stdout.write(self.style.SUCCESS("‚úÖ –ë–∞–∑–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏!"))
